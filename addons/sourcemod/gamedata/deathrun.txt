/**
 * Copyright (C) 2024  Mikusch
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

"Games"
{
	"tf"
	{
		"Signatures"
		{
			"CObjectDispenser::CouldHealTarget(CBaseEntity *)"
			{
				"library"	"server"
				"linux"		"@_ZN16CObjectDispenser15CouldHealTargetEP11CBaseEntity"
				"windows"	"\x55\x8B\xEC\x53\x56\x8B\x75\x08\x57\x8B\xF9\x8B\x87\x38\x01\x00\x00"
			}
			"CTFPlayer::GetMaxHealthForBuffing()"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer22GetMaxHealthForBuffingEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x53\x56\x57\x8B\xF9\xFF\xB7\xC8\x22\x00\x00"
			}
			"CTFPlayer::TeamFortress_CalculateMaxSpeed(bool)"
			{
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer30TeamFortress_CalculateMaxSpeedEb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x18\x56\x8B\xF1\x8B\x0D\x2A\x2A\x2A\x2A"
			}
			"CTFPlayer::RegenThink()"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10RegenThinkEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x7C\x56\x8B\xF1"
			}
			"CTeamplayRoundBasedRules::SetInWaitingForPlayers(bool)"
			{
				"library"	"server"
				"linux"		"@_ZN24CTeamplayRoundBasedRules22SetInWaitingForPlayersEb"
				"windows"	"\x55\x8B\xEC\x51\x56\x8B\xF1\xE8\x2A\x2A\x2A\x2A\x84\xC0\x0F\x85\x2A\x2A\x2A\x2A"
			}
		}
		"Offsets"
		{
			"CTeamplayRoundBasedRules::BHavePlayers()"
			{
				"library"	"server"
				"linux"		"230"
				"windows"	"228"
			}
			"CTeamplayRoundBasedRules::RoundRespawn()"
			{
				"library"	"server"
				"linux"		"231"
				"windows"	"229"
			}
		}
		"Functions"
		{
			"CObjectDispenser::CouldHealTarget(CBaseEntity *)"
			{
				"signature"	"CObjectDispenser::CouldHealTarget(CBaseEntity *)"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pTarget"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::GetMaxHealthForBuffing()"
			{
				"signature"	"CTFPlayer::GetMaxHealthForBuffing()"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
			}
			"CTFPlayer::TeamFortress_CalculateMaxSpeed(bool)"
			{
				"signature"	"CTFPlayer::TeamFortress_CalculateMaxSpeed(bool)"
				"callconv"	"thiscall"
				"return"	"float"
				"this"		"entity"
				"arguments"
				{
					"bIgnoreSpecialAbility"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::RegenThink()"
			{
				"signature"	"CTFPlayer::RegenThink()"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CTeamplayRoundBasedRules::SetInWaitingForPlayers(bool)"
			{
				"signature"	"CTeamplayRoundBasedRules::SetInWaitingForPlayers(bool)"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"ignore"
				"arguments"
				{
					"bWaitingForPlayers"
					{
						"type"	"bool"
					}
				}
			}
			"CTeamplayRoundBasedRules::BHavePlayers()"
			{
				"offset"	"CTeamplayRoundBasedRules::BHavePlayers()"
				"hooktype"	"gamerules"
				"return"	"bool"
				"this"		"ignore"
			}
			"CTeamplayRoundBasedRules::RoundRespawn()"
			{
				"offset"	"CTeamplayRoundBasedRules::RoundRespawn()"
				"hooktype"	"gamerules"
				"return"	"void"
				"this"		"ignore"
			}
		}
	}
}
